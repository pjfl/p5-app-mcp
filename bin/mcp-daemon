#!/usr/bin/env perl
# @(#)$Ident: mcp-daemon 2013-09-17 11:10 pjf ;

use strict;
use warnings;

use English qw( -no_match_vars );
use FindBin qw( $Bin );
use File::Spec;

BEGIN {
   my $path = File::Spec->catfile( $Bin, 'mcp-localenv' );

   do $path or die $EVAL_ERROR || "Path ${path} not done\n";
}

use version; our $VERSION = qv( sprintf '0.4.%d', q$Rev: 1 $ =~ /\d+/gmx );

use App::MCP::Daemon;

exit App::MCP::Daemon->new_with_options
   ( appclass => 'App::MCP', noask => 1 )->run;

__END__

=pod

=head1 NAME

mcp-daemon - I<Control the event processing daemon>

=head1 SYNOPSIS

=over 3

=item B<mcp-daemon> I<start | stop | restart | status | show_warnings>

Start / stop the event processing daemon

=item B<mcp-daemon> B<-H> | B<-h> I<[method]> | B<-?>

Display man page / method help / usage strings

=item B<mcp-daemon> B<list_methods>

Lists the methods available in this program

=back

=head1 VERSION

This documents version v0.4.$Rev: 1 $ of L<App::MCP>

=head1 DESCRIPTION

Control the event processing daemon

=head1 REQUIRED ARGUMENTS

=over 3

=item I<A command to perform>

=back

=head1 OPTIONS

=over 3

=item B<-D>

Turn debugging on

=back

=head1 DIAGNOSTICS

Prints errors to stderr

=head1 EXIT STATUS

Returns zero on success, non zero on failure

=head1 CONFIGURATION

Uses the constructor's C<appclass> attribute to locate a configuration file

=head1 DEPENDENCIES

=over 3

=item L<App::MCP::Daemon>

=back

=head1 INCOMPATIBILITIES

None

=head1 BUGS AND LIMITATIONS

Send reports to address below

=head1 AUTHOR

Peter Flanigan, C<< <Support at RoxSoft dot co dot uk> >>

=head1 LICENSE AND COPYRIGHT

Copyright (c) 2013 Peter Flanigan

This is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut

# Local Variables:
# mode: perl
# tab-width: 3
# End:
